#-*- coding: shift-jis -*-
#:kivy 1.10.1
#:import KivyLexer kivy.extras.highlight.KivyLexer
#:import Factory kivy.factory.Factory

BoxLayout:
    orientation: 'vertical'

    logo_size: 32
    icon_size: 16

    canvas.before:
        Color:
            rgb: .6, .6, .6
        Rectangle:
            size: self.size
            source: 'data/background.png'

    ActionBar:
        id: ab
        size_hint_y: None
        height: 40
        ActionView:
            id: av
            ActionPrevious:
                id: av_prev
                title: app.screen_title
                app_icon: 'data/icons/document.png'
                app_icon_height: root.logo_size
                app_icon_width: root.logo_size
                with_previous: True
                previous_image: 'data/icons/go_prev.png'
                previous_image_height: root.logo_size/2
                previous_image_width: root.logo_size/2
                on_release: app.go_previous_screen()
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]

            ActionGroup:
                id: av_tmsize
                mode: 'spinner'
                #overflow_image: 'data/icons/thumbnail.png'
                ActionButton:
                    text: '極小アイコン'
                    on_press: app.view_size=0.5
                ActionButton:
                    text: '小アイコン'
                    on_press: app.view_size=1
                ActionButton:
                    text: '中アイコン'
                    on_press: app.view_size=2
                ActionButton:
                    text: '大アイコン'
                    on_press: app.view_size=4

            ActionToggleButton:
                id: trash
                text: 'ゴミ箱'
                icon: 'data/icons/trash.png'
                icon_height: root.icon_size
                icon_width: root.icon_size
                group: 'select_mode'
                on_release: app.change_mode('trash') if(self.state=='down') else app.change_mode('normal')
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]

            ActionToggleButton:
                id: favorite
                text: 'お気に入り'
                icon: 'data/icons/star.png'
                icon_height: root.icon_size
                icon_width: root.icon_size
                group: 'select_mode'
                on_release: app.change_mode('favorite') if(self.state=='down') else app.change_mode('normal')
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]

            ActionToggleButton:
                id: chapter
                text: 'しおり'
                icon: 'data/icons/bookmark.png'
                icon_height: root.icon_size
                icon_width: root.icon_size
                group: 'select_mode'
                on_release: app.change_mode('chapter') if(self.state=='down') else app.change_mode('normal')
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]

            ActionButton:
                id: filter
                text: 'フィルタ'
                icon: 'data/icons/filter.png'
                icon_height: root.icon_size
                icon_width: root.icon_size
                on_release: app.open_filter_popup()
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]
            ActionToggleButton:
                id: tagsetting
                text: 'タグ'
                icon: 'data/icons/tag.png'
                icon_height: root.icon_size
                icon_width: root.icon_size
                group: 'select_mode'
                #on_release: app.open_tag_setting()
                on_release: app.change_mode('tag') if(self.state=='down') else app.change_mode('normal')
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]
            ActionToggleButton:
                id: tagsetting
                text: 'リンク'
                icon: 'data/icons/share.png'
                icon_height: root.icon_size
                icon_width: root.icon_size
                group: 'select_mode'
                #on_release: app.open_tag_setting()
                on_release: app.change_mode('link') if(self.state=='down') else app.change_mode('normal')
                color: [1,1,1,0] if app.hide_menu else [1, 1, 1, 1]

    StackLayout:
        id: additional_option
        orientation:'rl-tb'
        size_hint_y: None
        height: 0

        canvas.before:
            Color:
                rgba: 0.128, 0.128, 0.128, 1
            Rectangle:
                size: self.size
                pos: self.pos
    
    ScreenManager:
        id: sm
        Screen:
            name: 'InitialScreen'
            BoxLayout:
                state: 'play'
                Button:
                    text: 'load'
                    on_release: app.go_databaseitemsview()

<ThumbnailJump@Button>:
    text: ''
    font_size: 16
    background_color: 0.6, 0.6, 0.6, 0.8
    on_press: app.change_thumbnailview(self)

<JumpPopUp@BoxLayout>:
	orientation: 'vertical'
    spacing: 10
    
    input_text: ''

    AnchorLayout:
        anchor_x:'center'
        size_hint_y:None
        height: 30
        TextInput:
            text: ''
            hint_text:  '1 - {}'.format(app.divided_num)
            on_text: root.input_text = self.text
            multiline: False
 
	BoxLayout:
		orientation: 'horizontal'
		Button:
			size_hint: .5, 1
			text: 'OK'
			on_release: app.jump_thumbnail(root.input_text)
 
		Button:
			size_hint: .5, 1
			text: 'キャンセル'
			on_release: app.close_popup()

<ClickableLabel@ButtonBehavior+Label>:
    #text_size: self.size
    size: self.texture_size
    halign: 'left'
    #valign: 'center'
    font_size: '16sp'
    #color: 0, 0, 0, 1
<ClickableLabelT@ToggleButtonBehavior+Label>:
    #text_size: self.size
    size: self.texture_size
    halign: 'left'
    #valign: 'center'
    font_size: '16sp'
    #color: 0, 0, 0, 1

<FilterItem@BoxLayout>:
    text: ''
    #size_hint: None, None
    #size: 150, 50
    size_hint: None, None
    height: 40
    width: self.minimum_width
    CheckBox:
        id: cb
        #color: 0, 0.4, 1.0, 1.0
        size_hint_x: None
        width: '32dp'
    ClickableLabel:
        on_press: cb._do_press()
        size_hint_x:None
        text: root.text

<DBItem@BoxLayout>:
    
    title: ''
    filenum: 0

    fa_source: ''
    
    index: 0 
    is_selected: False
    is_favorite: False

    size_hint: None, None
    height:40
    width: self.minimum_width

    DBItemLabel:
        text: '{}({})'.format(root.title, root.filenum)
        color: [0.0,0.0,1.0,1.0] if root.is_selected else [0.25,0.25,0.25,1.0]
        on_press: app.select_db_item(root)
    
    Image:
        size_hint_x: None
        width: 16
        source: 'data/icons/star.png'
        color: [1.0,0.0,0.0,1.0] if root.is_favorite else [1.0,1.0,1.0,0.0]

<DBItemLabel@ButtonBehavior+Label>:
    size_hint_x:None
    size: self.texture_size
    halign: 'left'
    font_size: '16sp'

<DBItemInitialChar@ToggleButton>:
    text: ''
    font_size: 16
    background_color: 0.6, 0.6, 0.6, 0.8
    group: 'initial_char'
    on_release: app.adapt_ic_filter(self)
<NewEntryLayout@BoxLayout>:
    orientation: 'vertical'
    BoxLayout:
        size_hint_y: None
        height: 30
        canvas.before:
            Color:
                rgba: 0.5, 0.25, 0.25, 0.5
            Rectangle:
                size: self.size
                pos: self.pos
        Label:
            text:'基本情報'
            color: 1.0, 0.0, 0.0, 1
    BoxLayout:
        size_hint_y:None
        height:40
        Label:
            text:'Path: '
            size_hint_x: None
            width: 100
        TextInput:
            id: path_input
            text: ''
            hint_text: 'パスを入力して下さい'
            on_text: self.text = self.text.replace('\n',''); self.text = self.text.replace('\r','')
    BoxLayout:
        size_hint_y:None
        height:40
        Label:
            text:'Title: '
            size_hint_x: None
            width: 100
        TextInput:
            id: title_input
            text: ''
            hint_text: 'タイトルを入力してください'
            on_text: self.text = self.text.replace('\n',''); self.text = self.text.replace('\r','')
        Label:
            text: '頭文字'
            size_hint_x:None
            width: 60
            halign: 'right'
        Button:
            id: ic_btn
            size_hint_x: None
            width: self.height
            text: ''
            on_press: app.select_initial(self)
    BoxLayout:
        size_hint_y:None
        height:40
        Label:
            text:'Link: '
            size_hint_x: None
            width: 100
        TextInput:
            id: link_input
            text: ''
            hint_text: 'リンクするURLを入力してください'
            on_text: self.text = self.text.replace('\n',''); self.text = self.text.replace('\r','')

<TagEditItem@BoxLayout>:
    text: ''
    #size_hint: None, None
    #size: 150, 50
    size_hint: None, None
    height: 40
    width: self.minimum_width
    CheckBox:
        id: cb
        #color: 0, 0.4, 1.0, 1.0
        size_hint_x: None
        width: '32dp'
        group: 'tecb'
    ClickableLabel:
        on_press: cb._do_press(); app.reflect_tag(self, cb.active)
        size_hint_x:None
        text: root.text
<TagEditLayout@BoxLayout>:
    title: ''
    orientation: 'vertical'
    BoxLayout:
        size_hint_y: None
        height: 30
        canvas.before:
            Color:
                rgba: 0.25, 0.5, 0.25, 0.5
            Rectangle:
                size: self.size
                pos: self.pos
        Label:
            text:root.title
            color: 0, 0.8, 0.4, 1
       
<YesNoPopUp@BoxLayout>:
	orientation: 'vertical'
 
    Label:
        size_hint_y: None
        height: 40
        text: root.text
        font_size: 16
    
    ScrollView:
        Label:
            size_hint_y:None
            height: self.texture_size[1]
            text: root.subtext
 
	BoxLayout:
		orientation: 'horizontal'
        size_hint_y: None
        height: 60
 
		Button:
			size_hint: .5, 1
			text: 'はい'
			on_release: root.yes()
		Button:
			size_hint: .5, 1
			text: 'いいえ'
			on_release: root.no()

<SimplePopUp@BoxLayout>:
	orientation: 'vertical'
 
	Label:
		text: root.text
        font_size: 16
    Button:
        size_hint_y: None
        height: 60
        text: '閉じる'
        on_release: root.close()

<ProgressPopUp@BoxLayout>:
	orientation: 'vertical'
    Label:
        text: 'Title : {} ({}/{})'.format(app.now_title, app.now_task, app.task_num)
        font_size: 16
    Label:
        text: 'ファイル数 : {}/{}'.format(app.task_copied_file, app.task_file_num)
        font_size: 16
    ProgressBar:
        value: app.task_progress

